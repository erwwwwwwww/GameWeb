# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2019-06-09 13:48
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nickname', models.CharField(blank=True, help_text='昵称最大长度为8字符', max_length=8, null=True, verbose_name='昵称')),
                ('mobile_phone', models.CharField(blank=True, help_text='手机号码', max_length=11, null=True, verbose_name='手机号码')),
                ('qq', models.CharField(blank=True, help_text='QQ', max_length=15, null=True, verbose_name='QQ')),
                ('company', models.CharField(help_text='工作单位', max_length=50, verbose_name='工作单位')),
                ('avater', models.ImageField(upload_to='users', verbose_name='用户头像')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Articles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='标题', max_length=80)),
                ('image', models.ImageField(blank=True, null=True, upload_to='articleimage', verbose_name='文章主图片')),
                ('is_recommend', models.BooleanField(default=False)),
                ('add_time', models.DateTimeField(auto_now_add=True)),
                ('edit_time', models.DateTimeField(auto_now=True)),
                ('text', models.TextField(help_text='内容', verbose_name='内容')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='art_author', to=settings.AUTH_USER_MODEL, verbose_name='作者')),
            ],
            options={
                'verbose_name': '游戏文章',
                'verbose_name_plural': '游戏文章',
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='名称', max_length=20, verbose_name='名称')),
                ('email', models.EmailField(help_text='邮件', max_length=254, verbose_name='邮件')),
                ('obj', models.CharField(help_text='标题', max_length=50, verbose_name='标题')),
                ('body', models.TextField(help_text='内容', verbose_name='内容')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('active', models.BooleanField(default=True, verbose_name='是否显示')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='article.Articles')),
            ],
            options={
                'verbose_name': '评论',
                'verbose_name_plural': '评论',
            },
        ),
        migrations.CreateModel(
            name='GameImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='gameimage', verbose_name='商品图片')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '游戏图库',
                'verbose_name_plural': '游戏图库',
            },
        ),
        migrations.CreateModel(
            name='GamesReviews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='游戏名称')),
                ('game_tag', models.CharField(max_length=50, verbose_name='游戏类型')),
                ('date_publi', models.CharField(max_length=100, verbose_name='发布日期')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('body', models.TextField(verbose_name='信息')),
                ('game_brief', models.TextField(verbose_name='游戏简介')),
                ('buy_address', models.CharField(max_length=100, verbose_name='购买地址')),
                ('official_web', models.CharField(max_length=100, verbose_name='官方主页')),
                ('frame', models.PositiveIntegerField(verbose_name='画面')),
                ('sound_effect', models.PositiveIntegerField(verbose_name='音效')),
                ('plot', models.PositiveIntegerField(verbose_name='剧情')),
                ('operation', models.PositiveIntegerField(verbose_name='操作')),
                ('total_score', models.IntegerField(verbose_name='总评分')),
            ],
            options={
                'verbose_name': '游戏',
                'verbose_name_plural': '游戏',
            },
        ),
        migrations.AddField(
            model_name='gameimage',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='article.GamesReviews', verbose_name='游戏'),
        ),
    ]
